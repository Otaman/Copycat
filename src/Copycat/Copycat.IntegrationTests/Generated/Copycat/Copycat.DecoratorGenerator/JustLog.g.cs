// <auto-generated/>
namespace Copycat.IntegrationTests;
public partial class JustLog
{
    private Copycat.IntegrationTests.IProvideManyThings _decorated;
    public JustLog(Copycat.IntegrationTests.IProvideManyThings decorated)
    {
        _decorated = decorated;
    }

    /// <see cref = "JustLog.Log{T}(Func{T})"/>
    public bool GetBool()
    {
        Console.WriteLine($"Calling {nameof(GetBool)}");
        return _decorated.GetBool();
    }

    /// <see cref = "JustLog.Log{T}(Func{T})"/>
    public int GetInt()
    {
        Console.WriteLine($"Calling {nameof(GetInt)}");
        return _decorated.GetInt();
    }

    /// <see cref = "JustLog.Log{T}(Func{T})"/>
    public string GetString()
    {
        Console.WriteLine($"Calling {nameof(GetString)}");
        return _decorated.GetString();
    }

    /// <see cref = "JustLog.LogAsync{T}(Func{Task{T}})"/>
    public async Task<bool> GetBoolAsync()
    {
        Console.WriteLine($"Calling async {nameof(GetBoolAsync)}");
        return await _decorated.GetBoolAsync();
    }

    /// <see cref = "JustLog.LogAsync{T}(Func{Task{T}})"/>
    public async Task<int> GetIntAsync()
    {
        Console.WriteLine($"Calling async {nameof(GetIntAsync)}");
        return await _decorated.GetIntAsync();
    }

    /// <see cref = "JustLog.LogAsync{T}(Func{Task{T}})"/>
    public async Task<string> GetStringAsync()
    {
        Console.WriteLine($"Calling async {nameof(GetStringAsync)}");
        return await _decorated.GetStringAsync();
    }
}