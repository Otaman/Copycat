// <auto-generated/>
namespace Copycat.IntegrationTests;
public partial class InterfaceHierarchy
{
    private Copycat.IntegrationTests.IDescendantInterface _decorated;
    public InterfaceHierarchy(Copycat.IntegrationTests.IDescendantInterface decorated)
    {
        _decorated = decorated;
    }

    public string DescendantThing { get => _decorated.DescendantThing; set => _decorated.DescendantThing = value; }

    public string OneThing { get => _decorated.OneThing; set => _decorated.OneThing = value; }

    public string Name { get => _decorated.Name; set => _decorated.Name = value; }

    public string AnotherThing { get => _decorated.AnotherThing; set => _decorated.AnotherThing = value; }

    public string this[long index] { get => _decorated[index]; set => _decorated[index] = value; }

    public string this[bool index] { get => _decorated[index]; set => _decorated[index] = value; }

    public string this[int index] { get => _decorated[index]; set => _decorated[index] = value; }

    public string this[double index] { get => _decorated[index]; set => _decorated[index] = value; }

    public event System.EventHandler DescendantThingHappened { add => _decorated.DescendantThingHappened += value; remove => _decorated.DescendantThingHappened -= value; }

    public event System.EventHandler OneThingHappened { add => _decorated.OneThingHappened += value; remove => _decorated.OneThingHappened -= value; }

    public event System.EventHandler SomethingHappened { add => _decorated.SomethingHappened += value; remove => _decorated.SomethingHappened -= value; }

    public event System.EventHandler AnotherThingHappened { add => _decorated.AnotherThingHappened += value; remove => _decorated.AnotherThingHappened -= value; }

    public void DoSomethingElse() => _decorated.DoSomethingElse();
    public void DoSomething() => _decorated.DoSomething();
    public void DoCommonThing() => _decorated.DoCommonThing();
    public int ReturnSomething() => _decorated.ReturnSomething();
}